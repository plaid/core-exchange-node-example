# OIDC + Express Monorepo - Development Configuration Template
# Copy this file to .env and update with your specific values

# ===== SERVICE URLS =====
# Base hosts (do not include trailing slash)
OP_ISSUER=https://id.localtest.me
APP_HOST=https://app.localtest.me
APP_BASE_URL=https://app.localtest.me
API_HOST=https://api.localtest.me
API_BASE_URL=https://api.localtest.me

# ===== SERVICE PORTS =====
OP_PORT=3001
APP_PORT=3004
API_PORT=3003

# ===== OAUTH CONFIGURATION =====
# Default client configuration (used if OIDC_CLIENTS is not set)
CLIENT_ID=dev-rp-CHANGE-FOR-PRODUCTION
# SECURITY WARNING: Generate a secure secret for production!
# For development, you can use the default below
# For production, generate with: node scripts/secrets.js client
CLIENT_SECRET=dev-secret-CHANGE-FOR-PRODUCTION

# Callback URL for OAuth flow
REDIRECT_URI=https://app.localtest.me/callback

# Multiple OIDC Clients (Optional)
# To register multiple OAuth/OIDC clients, set OIDC_CLIENTS as a JSON array.
# If not set, a single client will be created using CLIENT_ID/CLIENT_SECRET above.
# Each client must have: client_id, client_secret, redirect_uris, grant_types, etc.
#
# Example with 2 clients:
# OIDC_CLIENTS=[{"client_id":"app1","client_secret":"secret1","redirect_uris":["https://app1.example.com/callback"],"post_logout_redirect_uris":["https://app1.example.com"],"grant_types":["authorization_code","refresh_token"],"response_types":["code"],"token_endpoint_auth_method":"client_secret_basic"},{"client_id":"app2","client_secret":"secret2","redirect_uris":["https://app2.example.com/callback"],"post_logout_redirect_uris":["https://app2.example.com"],"grant_types":["authorization_code","refresh_token"],"response_types":["code"],"token_endpoint_auth_method":"client_secret_basic"}]

# ===== SECURITY SECRETS =====
# SECURITY WARNING: Generate secure secrets for production!
# For development, you can use the default below
# For production, generate with: node scripts/secrets.js secrets
# Or generate everything at once: node scripts/secrets.js all
COOKIE_SECRET=dev-cookie-secret-CHANGE-FOR-PRODUCTION

# ===== TOKEN SIGNING (JWKS) =====
# JWKS (JSON Web Key Set) for signing JWT tokens
# IMPORTANT FOR PRODUCTION:
# - Development: Can be omitted (oidc-provider uses default ephemeral keys with kid="keystore-CHANGE-ME")
# - Production: MUST be set to prevent token invalidation on server restarts
# - Generate with: node scripts/secrets.js jwks
# - Contains PRIVATE KEY material - never commit to version control
# - Store in secure environment variables or secret manager (e.g., AWS Secrets Manager, HashiCorp Vault)
#
# Example format (DO NOT USE THIS - generate your own):
# JWKS='{"keys":[{"kty":"RSA","n":"...","e":"AQAB","d":"...","p":"...","q":"...","dp":"...","dq":"...","qi":"...","kid":"key-abc123","alg":"RS256","use":"sig"}]}'
#
# Leave commented out for development (uses ephemeral keys):
# JWKS=

# ===== API CONFIGURATION =====
API_AUDIENCE=api://my-api

# ===== ENVIRONMENT =====
# Set to 'production' for production deployment
NODE_ENV=development

# ===== DEVELOPMENT HELPERS =====
# Set to 'true' to enable debug logging
DEBUG=false
